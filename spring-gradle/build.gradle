buildscript {
    repositories {
		mavenLocal()
        mavenCentral()
        maven {
            url("https://plugins.gradle.org/m2/")
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

jar {
    baseName = 'spring-gradle'
    version =  '0.1.0'
}

repositories {
    mavenLocal()
    mavenCentral()
    mavenLocal()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Camden.SR5'
    }
}

dependencies {
    compile("org.projectlombok:lombok:1.16.6")
    compile('org.springframework.cloud:spring-cloud-starter-eureka')
    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // end::actuator[]
    testCompile("junit:junit")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.squareup.okhttp:okhttp:2.7.2'
}

task create {
    doLast {
        sourceSets*.java.srcDirs*.each { it.mkdirs() }
        sourceSets*.resources.srcDirs*.each { it.mkdirs() }
        def root = getProject().rootProject.name
        def sb = new StringBuilder();
        def l = root.split("-")
        def name = ""
        def path = "src\\main\\java\\com\\lc"
        l.each { str ->
            name = name + str.substring(0, 1).toUpperCase() + str.substring(1)
            path = path + "\\" + str
        }
        name = name + "Application"

        sb.append("package com.lc." + root.replace("-", ".") + ";\r\n")
        sb.append("\r\npublic class " + name + """{
            public static void main(String[] args){
            
            }
        }
        """)
        file(path).mkdirs()
        def f = file(path + "\\" + name + ".java")
        f.createNewFile()
        f.write(sb.toString())
        file('src/main/resources/application.properties').createNewFile();
        println "Create Done"
    }
}
